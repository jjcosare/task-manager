version: '3'

services:
  app:
    image: 'jjcosare-spring-boot-postgres:latest'
    build:
      context: .
    container_name: app
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/sample
      - SPRING_DATASOURCE_USERNAME=sample
      - SPRING_DATASOURCE_PASSWORD=sample
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/healthcheck" ]
      interval: 5s
      timeout: 10s
      retries: 3

  db:
    image: postgres:14
    volumes:
      - sample_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=sample
      - POSTGRES_USER=sample
      - POSTGRES_DB=sample
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=jjcosare@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "-O", "-", "http://localhost:80/misc/ping" ]
      interval: 5s
      timeout: 10s
      retries: 3

  sonarqube:
    image: sonarqube:lts
    ports:
      - "9000:9000"
    environment:
      - SONAR_FORCEAUTHENTICATION=false
    healthcheck:
      test: [ "CMD", "wget", "-O", "-", "http://localhost:9000/api/system/status" ]
      interval: 5s
      timeout: 10s
      retries: 3

volumes:
  sample_db: { }